!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ASM_DIR	Makefile	/^ASM_DIR=asm$/;"	m
BLOCK	/home/imulet/cs562/imulet/src/include/pci.h	/^    BLOCK,$/;"	e	enum:drivers
CC	Makefile	/^CC=$(CROSS_COMPILE)gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS=-g -O0 -Wall -Wextra -march=rv64gc -mabi=lp64d -ffreestanding -nostdlib -nostartfiles -Isrc\/include -mcmodel=medany$/;"	m
CROSS_COMPILE	Makefile	/^CROSS_COMPILE?=riscv64-unknown-linux-gnu-$/;"	m
CXX	Makefile	/^CXX=$(CROSS_COMPILE)g++$/;"	m
DEPS	Makefile	/^DEPS=$(patsubst $(SOURCE_DIR)\/%.c,$(DEP_DIR)\/%.d,$(SOURCES))$/;"	m
DEP_DIR	Makefile	/^DEP_DIR=deps$/;"	m
Dtos	src/kprint.c	/^static char * Dtos(char *p, s64 d) {$/;"	f	file:
GDB	Makefile	/^GDB=$(CROSS_COMPILE)gdb$/;"	m
GPU	/home/imulet/cs562/imulet/src/include/pci.h	/^    GPU$/;"	e	enum:drivers
IS_LEAP	src/utils.c	10;"	d	file:
KERNEL	Makefile	/^KERNEL=cosc562.elf$/;"	m
LDFLAGS	Makefile	/^LDFLAGS=-Tlds\/riscv.lds $(CFLAGS)$/;"	m
LIBS	Makefile	/^LIBS=$/;"	m
OBJCOPY	Makefile	/^OBJCOPY=$(CROSS_COMPILE)objcopy$/;"	m
OBJECTS	Makefile	/^OBJECTS=$(patsubst $(SOURCE_DIR)\/%.c,$(OBJ_DIR)\/%.o,$(SOURCES))$/;"	m
OBJ_DIR	Makefile	/^OBJ_DIR=objs$/;"	m
PCIdriver	/home/imulet/cs562/imulet/src/include/pci.h	/^struct PCIdriver{$/;"	s
QEMU	Makefile	/^QEMU?=qemu-system-riscv64$/;"	m
QEMU_BIOS	Makefile	/^QEMU_BIOS=.\/sbi\/sbi.elf$/;"	m
QEMU_CPU	Makefile	/^QEMU_CPU=rv64$/;"	m
QEMU_CPUS	Makefile	/^QEMU_CPUS=8$/;"	m
QEMU_DEBUG	Makefile	/^QEMU_DEBUG=guest_errors,unimp$/;"	m
QEMU_DEBUG_PIPE	Makefile	/^QEMU_DEBUG_PIPE=debug.pipe$/;"	m
QEMU_HARD_DRIVE	Makefile	/^QEMU_HARD_DRIVE=hdd.dsk$/;"	m
QEMU_KERNEL	Makefile	/^QEMU_KERNEL=$(KERNEL)$/;"	m
QEMU_MACH	Makefile	/^QEMU_MACH=virt$/;"	m
QEMU_MEM	Makefile	/^QEMU_MEM=256M$/;"	m
QEMU_OPTIONS	Makefile	/^QEMU_OPTIONS= -serial mon:stdio -gdb unix:$(QEMU_DEBUG_PIPE),server,nowait -rtc base=utc$/;"	m
RNG	/home/imulet/cs562/imulet/src/include/pci.h	/^    RNG,$/;"	e	enum:drivers
SBI_KERNEL	Makefile	/^SBI_KERNEL=sbi.elf$/;"	m
SOURCES	Makefile	/^SOURCES=$(wildcard $(SOURCE_DIR)\/*.c)$/;"	m
SOURCES_ASM	Makefile	/^SOURCES_ASM=$(wildcard $(ASM_DIR)\/*.S)$/;"	m
SOURCE_DIR	Makefile	/^SOURCE_DIR=src$/;"	m
SUP_GPREGS	src/main.c	/^struct trapframe SUP_GPREGS[8];$/;"	v	typeref:struct:trapframe
Utos	src/kprint.c	/^static char * Utos(char *p, u64 d) {$/;"	f	file:
Xtos	src/kprint.c	/^static char * Xtos(char *p, u64 x) {$/;"	f	file:
_28_days	src/utils.c	11;"	d	file:
_29_days	src/utils.c	12;"	d	file:
_30_days	src/utils.c	13;"	d	file:
_31_days	src/utils.c	14;"	d	file:
__PCI_H__	/home/imulet/cs562/imulet/src/include/pci.h	2;"	d
_kprint_getc	src/kprint.c	/^static u8 (*_kprint_getc)(void);$/;"	v	file:
_kprint_putc	src/kprint.c	/^static void (*_kprint_putc)(u8);$/;"	v	file:
_kputs	src/kprint.c	/^static void _kputs(const char *s) {$/;"	f	file:
append_node	src/imalloc.c	/^void append_node(Flist* first, Flist* second){$/;"	f
at_idx	/home/imulet/cs562/imulet/src/include/pci.h	/^    u16 at_idx;$/;"	m	struct:PCIdriver
atoi	src/utils.c	/^int atoi(const char* str){$/;"	f
atos	src/kprint.c	/^static char * atos(char *p, char c) {$/;"	f	file:
available	/home/imulet/cs562/imulet/src/include/pci.h	/^    struct virtq_avail* available;$/;"	m	struct:virt_config	typeref:struct:virt_config::virtq_avail
bar	/home/imulet/cs562/imulet/src/include/pci.h	/^            u32 bar[2];$/;"	m	struct:ecamheader::__anon3::__anon5
bar	/home/imulet/cs562/imulet/src/include/pci.h	/^            u32 bar[6];$/;"	m	struct:ecamheader::__anon3::__anon4
bist	/home/imulet/cs562/imulet/src/include/pci.h	/^    u8 bist;$/;"	m	struct:ecamheader
bridge_control	/home/imulet/cs562/imulet/src/include/pci.h	/^            u16 bridge_control;$/;"	m	struct:ecamheader::__anon3::__anon5
cacheline_size	/home/imulet/cs562/imulet/src/include/pci.h	/^    u8 cacheline_size;$/;"	m	struct:ecamheader
capability	/home/imulet/cs562/imulet/src/include/pci.h	/^struct capability{$/;"	s
capes_pointer	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8  capes_pointer;$/;"	m	struct:ecamheader::__anon3::__anon4
capes_pointer	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8  capes_pointer;$/;"	m	struct:ecamheader::__anon3::__anon5
capes_pointer	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8  capes_pointer;$/;"	m	struct:ecamheader::__anon3::__anon6
cardbus_cis_pointer	/home/imulet/cs562/imulet/src/include/pci.h	/^            u32 cardbus_cis_pointer;$/;"	m	struct:ecamheader::__anon3::__anon4
class_basecode	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8 class_basecode;$/;"	m	struct:ecamheader::__anon1::__anon2
class_code	/home/imulet/cs562/imulet/src/include/pci.h	/^        u16 class_code;$/;"	m	union:ecamheader::__anon1
class_subcode	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8 class_subcode;$/;"	m	struct:ecamheader::__anon1::__anon2
coalesce_free_list	src/imalloc.c	/^void coalesce_free_list(){$/;"	f
command_reg	/home/imulet/cs562/imulet/src/include/pci.h	/^    u16 command_reg;$/;"	m	struct:ecamheader
common	/home/imulet/cs562/imulet/src/include/pci.h	/^        } common;$/;"	m	union:ecamheader::__anon3	typeref:struct:ecamheader::__anon3::__anon6
common_cfg	/home/imulet/cs562/imulet/src/include/pci.h	/^    volatile struct virtio_pci_common_cfg* common_cfg;$/;"	m	struct:virt_config	typeref:struct:virt_config::virtio_pci_common_cfg
config	/home/imulet/cs562/imulet/src/include/pci.h	/^    struct virt_config* config;$/;"	m	struct:PCIdriver	typeref:struct:PCIdriver::virt_config
cont_head	src/page.c	/^page* cont_head;$/;"	v
desc	/home/imulet/cs562/imulet/src/include/pci.h	/^    struct virtq_desc* desc;$/;"	m	struct:virt_config	typeref:struct:virt_config::virtq_desc
device	/home/imulet/cs562/imulet/src/include/pci.h	/^    u16 device;$/;"	m	struct:PCIdriver
device_id	/home/imulet/cs562/imulet/src/include/pci.h	/^    u16 device_id;$/;"	m	struct:ecamheader
device_spec	/home/imulet/cs562/imulet/src/include/pci.h	/^    volatile void* device_spec;$/;"	m	struct:virt_config
dlist	src/driver.c	/^struct driver_list* dlist;$/;"	v	typeref:struct:driver_list
drive_rng	/home/imulet/cs562/imulet/src/include/pci.h	/^        virtio_pci_rng_driver drive_rng;$/;"	m	union:PCIdriver::__anon7
drive_rng_init	/home/imulet/cs562/imulet/src/include/pci.h	/^        virtio_pci_rng_driver_init drive_rng_init;$/;"	m	union:PCIdriver::__anon8
driver	/home/imulet/cs562/imulet/src/include/pci.h	/^    struct PCIdriver driver;$/;"	m	struct:driver_list	typeref:struct:driver_list::PCIdriver
driver_list	/home/imulet/cs562/imulet/src/include/pci.h	/^struct driver_list{$/;"	s
drivers	/home/imulet/cs562/imulet/src/include/pci.h	/^enum drivers{$/;"	g
dtos	src/kprint.c	/^static char * dtos(char *p, s32 d) {$/;"	f	file:
eat_pad	src/kprint.c	/^static const char * eat_pad(const char *s, int *pad) {$/;"	f	file:
ecamheader	/home/imulet/cs562/imulet/src/include/pci.h	/^struct ecamheader {$/;"	s
exec_cmd	src/utils.c	/^void exec_cmd(char* cmd){$/;"	f
expansion_rom_addr	/home/imulet/cs562/imulet/src/include/pci.h	/^            u32 expansion_rom_addr;$/;"	m	struct:ecamheader::__anon3::__anon4
expansion_rom_addr	/home/imulet/cs562/imulet/src/include/pci.h	/^            u32 expansion_rom_addr;$/;"	m	struct:ecamheader::__anon3::__anon5
find_bar	src/pci.c	/^u64 find_bar(u16 vendor, u16 d, u8 bar){$/;"	f
find_driver	src/driver.c	/^struct PCIdriver* find_driver(u16 vendor, u16 device){$/;"	f
get_ecam	src/pci.c	/^volatile struct ecamheader *get_ecam(u8 bus, u8 device, u8 function, u16 regs){$/;"	f
get_nano_time	src/utils.c	/^u64 get_nano_time(){$/;"	f
get_unix_time	src/utils.c	/^unix_time get_unix_time(u64 time){$/;"	f
handle_irq	src/trap.c	/^void handle_irq(u64 cause){$/;"	f
head	src/page.c	/^page* head;$/;"	v
header_type	/home/imulet/cs562/imulet/src/include/pci.h	/^    u8 header_type;$/;"	m	struct:ecamheader
id	/home/imulet/cs562/imulet/src/include/pci.h	/^    u8 id;$/;"	m	struct:capability
imalloc	src/imalloc.c	/^void* imalloc(size_t num_bytes){$/;"	f
imalloc_head	src/imalloc.c	/^Flist* imalloc_head;$/;"	v
imalloc_init	src/imalloc.c	/^void imalloc_init(void){$/;"	f
imfree	src/imalloc.c	/^void imfree(void* ptr){$/;"	f
init_cont_page	src/page.c	/^void init_cont_page(void){$/;"	f
initialize_page	src/page.c	/^void initialize_page(){$/;"	f
initpci	src/pci.c	/^void initpci(void){$/;"	f
interrupt_line	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8  interrupt_line;$/;"	m	struct:ecamheader::__anon3::__anon4
interrupt_line	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8  interrupt_line;$/;"	m	struct:ecamheader::__anon3::__anon5
interrupt_line	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8  interrupt_line;$/;"	m	struct:ecamheader::__anon3::__anon6
interrupt_pin	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8  interrupt_pin;$/;"	m	struct:ecamheader::__anon3::__anon4
interrupt_pin	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8  interrupt_pin;$/;"	m	struct:ecamheader::__anon3::__anon5
interrupt_pin	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8  interrupt_pin;$/;"	m	struct:ecamheader::__anon3::__anon6
io_base	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8  io_base;$/;"	m	struct:ecamheader::__anon3::__anon5
io_base_upper	/home/imulet/cs562/imulet/src/include/pci.h	/^            u16 io_base_upper;$/;"	m	struct:ecamheader::__anon3::__anon5
io_limit	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8  io_limit;$/;"	m	struct:ecamheader::__anon3::__anon5
io_limit_upper	/home/imulet/cs562/imulet/src/include/pci.h	/^            u16 io_limit_upper;$/;"	m	struct:ecamheader::__anon3::__anon5
irq	/home/imulet/cs562/imulet/src/include/pci.h	/^    u64 irq;$/;"	m	struct:PCIdriver
irq_table	src/trap.c	/^void (*irq_table[])(u64) = {$/;"	v
isr_cap	/home/imulet/cs562/imulet/src/include/pci.h	/^    volatile struct virtio_pci_isr_cap* isr_cap;$/;"	m	struct:virt_config	typeref:struct:virt_config::virtio_pci_isr_cap
kernel_page_table	src/mmu.c	/^page_table* kernel_page_table;$/;"	v
kgetc	src/kprint.c	/^u8 kgetc(void) {$/;"	f
kprint	src/kprint.c	/^void kprint(const char *fmt, ...) {$/;"	f
kprint_set_getc	src/kprint.c	/^void kprint_set_getc(u8 (*getc)(void)) { _kprint_getc = getc; }$/;"	f
kprint_set_putc	src/kprint.c	/^void kprint_set_putc(void (*putc)(u8)) { _kprint_putc = putc; }$/;"	f
kputc	src/kprint.c	/^void kputc(u8 c) {$/;"	f
latency_timer	/home/imulet/cs562/imulet/src/include/pci.h	/^    u8 latency_timer;$/;"	m	struct:ecamheader
main	src/main.c	/^int main(void){$/;"	f
max_lat	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8  max_lat;$/;"	m	struct:ecamheader::__anon3::__anon4
memory_base	/home/imulet/cs562/imulet/src/include/pci.h	/^            u16 memory_base;$/;"	m	struct:ecamheader::__anon3::__anon5
memory_limit	/home/imulet/cs562/imulet/src/include/pci.h	/^            u16 memory_limit;$/;"	m	struct:ecamheader::__anon3::__anon5
memset	src/utils.c	/^void* memset(void* dst, u32 c, u64 size){$/;"	f
min_gnt	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8  min_gnt;$/;"	m	struct:ecamheader::__anon3::__anon4
mmu_init	src/mmu.c	/^void mmu_init(){$/;"	f
mmu_lock	src/mmu.c	/^Mutex mmu_lock;$/;"	v
mmu_map	src/mmu.c	/^void mmu_map(page_table* p_table, u64 virt_addr, u64 phys_addr, u64 addr_range, u64 set_bits){$/;"	f
mmu_map_single	src/mmu.c	/^void mmu_map_single(page_table* p_table, u64 virt_addr, u64 phys_addr, u64 set_bits){$/;"	f
mmu_unmap	src/mmu.c	/^void mmu_unmap(page_table* p_table){$/;"	f
month_name	src/utils.c	/^char* month_name[] = {$/;"	v
months	src/utils.c	/^u64 months[] = {$/;"	v
mutex_spinlock	src/lock.c	/^void mutex_spinlock(Mutex *mutex){$/;"	f
mutex_trylock	src/lock.c	/^u64 mutex_trylock(Mutex *mutex){$/;"	f
mutex_unlock	src/lock.c	/^void mutex_unlock(Mutex *mutex){$/;"	f
next	/home/imulet/cs562/imulet/src/include/pci.h	/^    struct driver_list* next;$/;"	m	struct:driver_list	typeref:struct:driver_list::driver_list
next	/home/imulet/cs562/imulet/src/include/pci.h	/^    u8 next;$/;"	m	struct:capability
notify_cap	/home/imulet/cs562/imulet/src/include/pci.h	/^    volatile struct virtio_pci_notify_cap* notify_cap;$/;"	m	struct:virt_config	typeref:struct:virt_config::virtio_pci_notify_cap
num_of_bk	src/page.c	/^u64 num_of_bk;$/;"	v
page_cont_falloc	src/page.c	/^void* page_cont_falloc(u64 num_pages){$/;"	f
page_cont_free	src/page.c	/^void page_cont_free(void* pg){$/;"	f
page_falloc	src/page.c	/^void* page_falloc(){$/;"	f
page_free	src/page.c	/^void page_free(void* pg){$/;"	f
pci_register_driver	src/driver.c	/^void pci_register_driver(u16 vendor, u16 device, void* driver_fn, void* driver_init_fn, int type){$/;"	f
pci_set_capes	src/pci.c	/^void pci_set_capes(){$/;"	f
pg_lock	src/page.c	/^Mutex pg_lock;$/;"	v
plic_claim	src/plic.c	/^u32 plic_claim(u64 hart)$/;"	f
plic_complete	src/plic.c	/^void plic_complete(int hart, int id)$/;"	f
plic_disable	src/plic.c	/^void plic_disable(int hart, int interrupt_id)$/;"	f
plic_enable	src/plic.c	/^void plic_enable(int hart, int interrupt_id)$/;"	f
plic_handle_irq	src/plic.c	/^void plic_handle_irq(u64 cause){$/;"	f
plic_init	src/plic.c	/^void plic_init(){$/;"	f
plic_set_priority	src/plic.c	/^void plic_set_priority(int interrupt_id, u8 priority)$/;"	f
plic_set_threshold	src/plic.c	/^void plic_set_threshold(int hart, u8 priority)$/;"	f
prefetch_base_upper	/home/imulet/cs562/imulet/src/include/pci.h	/^            u32 prefetch_base_upper;$/;"	m	struct:ecamheader::__anon3::__anon5
prefetch_limit_upper	/home/imulet/cs562/imulet/src/include/pci.h	/^            u32 prefetch_limit_upper;$/;"	m	struct:ecamheader::__anon3::__anon5
prefetch_memory_base	/home/imulet/cs562/imulet/src/include/pci.h	/^            u16 prefetch_memory_base;$/;"	m	struct:ecamheader::__anon3::__anon5
prefetch_memory_limit	/home/imulet/cs562/imulet/src/include/pci.h	/^            u16 prefetch_memory_limit;$/;"	m	struct:ecamheader::__anon3::__anon5
primary_bus_no	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8  primary_bus_no;$/;"	m	struct:ecamheader::__anon3::__anon5
print_flist	src/imalloc.c	/^void print_flist(){$/;"	f
print_prompt	src/tinyshell.c	/^void print_prompt(){$/;"	f
print_prompt_failure	src/tinyshell.c	/^void print_prompt_failure(){$/;"	f
print_unix_time	src/utils.c	/^void print_unix_time(){$/;"	f
prog_if	/home/imulet/cs562/imulet/src/include/pci.h	/^    u8 prog_if;$/;"	m	struct:ecamheader
remove_node	src/imalloc.c	/^void remove_node(Flist* first){$/;"	f
reserved0	/home/imulet/cs562/imulet/src/include/pci.h	/^            u32 reserved0[9];$/;"	m	struct:ecamheader::__anon3::__anon6
reserved0	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8  reserved0[3];$/;"	m	struct:ecamheader::__anon3::__anon4
reserved0	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8  reserved0[3];$/;"	m	struct:ecamheader::__anon3::__anon5
reserved1	/home/imulet/cs562/imulet/src/include/pci.h	/^            u32 reserved1;$/;"	m	struct:ecamheader::__anon3::__anon4
reserved1	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8  reserved1[3];$/;"	m	struct:ecamheader::__anon3::__anon6
reserved2	/home/imulet/cs562/imulet/src/include/pci.h	/^            u32 reserved2;$/;"	m	struct:ecamheader::__anon3::__anon6
reserved3	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8  reserved3[2];$/;"	m	struct:ecamheader::__anon3::__anon6
revision_id	/home/imulet/cs562/imulet/src/include/pci.h	/^    u8 revision_id;$/;"	m	struct:ecamheader
sbi_get_time	src/sbi.c	/^u64 sbi_get_time(void){$/;"	f
sbi_getchar	src/sbi.c	/^u8 sbi_getchar(){$/;"	f
sbi_hart_status	src/sbi.c	/^u64 sbi_hart_status(u64 hart){$/;"	f
sbi_putchar	src/sbi.c	/^void sbi_putchar(u8 c){$/;"	f
sbi_set_timecmp	src/sbi.c	/^void sbi_set_timecmp(u64 hart, u64 value){$/;"	f
sbi_start_hart	src/sbi.c	/^u64 sbi_start_hart(u64 hart, void(*target)(void), u64 privilege){$/;"	f
sbi_stop_hart	src/sbi.c	/^u64 sbi_stop_hart(void) {$/;"	f
sbi_system_off	src/sbi.c	/^void sbi_system_off(){$/;"	f
secondary_bus_no	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8  secondary_bus_no;$/;"	m	struct:ecamheader::__anon3::__anon5
secondary_latency_timer	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8  secondary_latency_timer;$/;"	m	struct:ecamheader::__anon3::__anon5
secondary_status	/home/imulet/cs562/imulet/src/include/pci.h	/^            u16 secondary_status;$/;"	m	struct:ecamheader::__anon3::__anon5
semaphore_trydown	src/lock.c	/^u64 semaphore_trydown(Semaphore *sem) {$/;"	f
semaphore_tryup	src/lock.c	/^void semaphore_tryup(Semaphore *sem) {$/;"	f
start_hart	src/utils.c	/^void start_hart(u64 hart){$/;"	f
starting_virt_addr	src/imalloc.c	/^u64 starting_virt_addr =  0x130000000UL;$/;"	v
status_reg	/home/imulet/cs562/imulet/src/include/pci.h	/^    u16 status_reg;$/;"	m	struct:ecamheader
strcmp	src/utils.c	/^int strcmp(char* str1, char* str2){$/;"	f
strcpy	src/utils.c	/^int strcpy(char* str1, char* str2){$/;"	f
strncmp	src/utils.c	/^int strncmp(char* str1, char* str2, u32 n){$/;"	f
sub_device_id	/home/imulet/cs562/imulet/src/include/pci.h	/^            u16 sub_device_id;$/;"	m	struct:ecamheader::__anon3::__anon4
sub_vendor_id	/home/imulet/cs562/imulet/src/include/pci.h	/^            u16 sub_vendor_id;$/;"	m	struct:ecamheader::__anon3::__anon4
subordinate_bus_no	/home/imulet/cs562/imulet/src/include/pci.h	/^            u8  subordinate_bus_no;$/;"	m	struct:ecamheader::__anon3::__anon5
sup_trap_handler	src/trap.c	/^void sup_trap_handler(void){$/;"	f
t_num_pages	src/page.c	/^u64 t_num_pages;$/;"	v
test_hart	src/utils.c	/^void test_hart(void){$/;"	f
top_of_bk	src/page.c	/^u8* top_of_bk;$/;"	v
total_num_pages	src/imalloc.c	/^u64 total_num_pages;$/;"	v
tsh	src/tinyshell.c	/^void tsh(void){$/;"	f
type0	/home/imulet/cs562/imulet/src/include/pci.h	/^        } type0;$/;"	m	union:ecamheader::__anon3	typeref:struct:ecamheader::__anon3::__anon4
type1	/home/imulet/cs562/imulet/src/include/pci.h	/^        } type1;$/;"	m	union:ecamheader::__anon3	typeref:struct:ecamheader::__anon3::__anon5
unhandled_irq	src/trap.c	/^void unhandled_irq(u64 cause){$/;"	f
used	/home/imulet/cs562/imulet/src/include/pci.h	/^    struct virtq_used* used;$/;"	m	struct:virt_config	typeref:struct:virt_config::virtq_used
utos	src/kprint.c	/^static char * utos(char *p, u32 d) {$/;"	f	file:
vendor	/home/imulet/cs562/imulet/src/include/pci.h	/^    u16 vendor;$/;"	m	struct:PCIdriver
vendor_id	/home/imulet/cs562/imulet/src/include/pci.h	/^    u16 vendor_id;$/;"	m	struct:ecamheader
virt_config	/home/imulet/cs562/imulet/src/include/pci.h	/^struct virt_config{$/;"	s
virt_rng_drive	src/rng_driver.c	/^int virt_rng_drive(void* buffer, u16 size){$/;"	f
virt_rng_drive_init	src/rng_driver.c	/^void virt_rng_drive_init(struct PCIdriver* driver, void** capes_list, int n_capes){$/;"	f
virt_to_phys	src/mmu.c	/^u64 virt_to_phys(page_table* p_table, u64 virt_addr){$/;"	f
virtio_pci_rng_driver	/home/imulet/cs562/imulet/src/include/pci.h	/^typedef int(*virtio_pci_rng_driver)(void*, u16);$/;"	t
virtio_pci_rng_driver_init	/home/imulet/cs562/imulet/src/include/pci.h	/^typedef void(*virtio_pci_rng_driver_init)(struct PCIdriver*, void**, int);$/;"	t
vkprint	src/kprint.c	/^void vkprint(const char *fmt, va_list args) {$/;"	f
xtos	src/kprint.c	/^static char * xtos(char *p, u32 x) {$/;"	f	file:
